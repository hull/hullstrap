// table,
// th, tr, td{
//   border:none !important;
// }

.table > thead > tr > th{
  @include trailing-border(2px, 1);
}


.table > thead > tr > th,
.table > thead > tr > td,
.table > tbody > tr > th,
.table > tbody > tr > td,
.table > tfoot > tr > th,
.table > tfoot > tr > td{
  @include rhythm(0,.5,.5,0);
  border:0;
  > p{
    @include rhythm(0,0,0,.5);
  }
  // @include box-shadow(0 -1px 0 0 $light-filet);
  // @include leading-border(1px, .5);
}

.table{
  > thead, > tbody{
    > tr {
      > th, > td {
        @include box-shadow(inset 0px -1px 0 0 rgba(255, 255, 255, 0.2));
        > p{
          @include rhythm(0,0,0,0);
          // @include rhythm(.25,0,0,.25);
        }
      }
    }
  }
}

.table-bordered{
  @include box-shadow(inset 0px -1px 0 0 rgba(255, 255, 255, 0.2));
  border:0; 
  > thead, > tbody{
    > tr {
      > th, > td {
        @include box-shadow(inset -1px 0 0 0 rgba(233, 233, 233, 1));
        padding: $base-line-height/2;
      }
    }
  }
}

.table-condensed{
  > thead, > tbody{
    > tr {
      > th, > td {
        padding: $base-line-height/4 $padding-base-horizontal;
        > p{
          @include rhythm(0,0,0,0);
        }
      }
    }
  }
}

.table-json{
  .navigation span, span.object, span.array{
    @extend .text-info;
    @include font-weight-bold;
    text-decoration: underline;
    cursor: pointer;
  }
}

.datagrid-responsive{
  overflow: scroll;
  padding-right: 0;
  width: 100%;
}

table.datagrid-table, table.sticky-thead, table.sticky-col, table.sticky-intersect {
  overflow: hidden;
  max-width: none;
  @include box-sizing(content-box);
  td, th{
    vertical-align: middle;
    max-width: 200px;
    text-overflow:ellipsis;
    overflow: hidden;
  }
  td.type-string.name,
  td.type-date,
  td.type-number,
  th{
    white-space: nowrap;
  }
  .table-row-selector{
    text-align: center;
    padding: 0;
    background-color: white;
    label{
      padding: 9px 7px;
      display: block;
    }
    input[type='checkbox']{
      height: auto;
    }
  }
  tbody{
    tr td{
      background-color: white;
      // @include transition(all .1s ceaser($easeOutQuint));
    }
    tr.selected td{
      background-color: white;
    }
    tr.datagrid-row{
      @include transition(all .3s ceaser($easeOutQuint));
      .datagrid-options-toggle{
        position: absolute;
        height: 100%;
        width: 100%;
        i.icon-arrow_left{
          margin-top: -8px;
          top: 50%;
          position: absolute;
          left: 50%;
          margin-left: -5px;
        }
      }
      td.datagrid-options-cell{
        position: relative;
        padding: 0;
        width: 65px;
        min-width: 65px;
        overflow: visible;
      }
      &.options{
        @include translate3d(-196px, 0, 0);
        .icon-arrow_left:before{
          @include scale(-1,1);
        }
      }
      div.datagrid-options-container{
        padding: 0;
        position: absolute;
        left: 100%;
        height: 100%;
        width: 196px;
        top:0;
        .btn-group{
          height: 100%;
        }
      }
    }
  }
  &.some-selected{
    tr td{
      opacity: .5;
      background-color: rgba(255,255,255,0);
    }
    tr.selected td{
      background-color: white;
      opacity: 1;
    }
  }
  tbody, tbody.some-selected{
    tr.selected td.table-row-selector{
      cursor: pointer;
      background-color: $primary;
      box-shadow: none;
    }
  }

  /*
  * Header and footer styles
  */
  thead, tfoot {
    th {
      font-size: 12px;
    }
  }

  thead {
    th td {
      @include box-shadow(inset -1px 0 0 0 #e9e9e9);
      &:active { outline: none; }
      &:first-child{ @include box-shadow(inset 1px 0 0 0 #e9e9e9); }
    }
    // Sorting
    .sorting_asc,
    .sorting_desc,
    .sorting {
      cursor: pointer;
      *cursor: hand;
    }
    .sorting, .sorting_asc, .sorting_desc, .sorting_asc_disabled, .sorting_desk_disabled{
      position: relative;
      padding-right: 23px;
    }
    .sorting:after, .sorting_asc:after, .sorting_desc:after, .sorting_asc_disabled:after, .sorting_desk_disabled:after{
      content: "▼";
      position: absolute;
      top: 10px;
      right: 5px;
    }
    .sorting_asc:after, .sorting_asc_disabled:after{
      content: "▲";
    }
    .sorting:after{
      opacity: .2;
      content: "▲▼";
    }

    .sorting_asc_disabled:after, .sorting_desk_disabled:after{
      opacity: .5;
    }
  }

  // // Its not uncommon to use * {border-box} now, but it messes up the column width
  // // calculations, so use content-box for the table and cells
  th,
  td {
    @include box-sizing(content-box);
  }
}
